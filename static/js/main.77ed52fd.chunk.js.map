{"version":3,"sources":["NewBoxForm.js","Box.js","BoxList.js","App.js","serviceWorker.js","index.js"],"names":["NewBoxForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","boxKey","state","width","height","color","handleChange","bind","assertThisInitialized","handleSubmit","evt","setState","defineProperty","target","name","value","preventDefault","newBox","objectSpread","id","addBox","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","Component","Box","handleRemove","remBox","style","concat","backgroundColor","onClick","BoxList","boxesList","currState","filter","item","box","toConsumableArray","_this2","map","src_Box","key","src_NewBoxForm","listRender","App","src_BoxList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77ed52fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NewBoxForm extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.boxKey = 0;\r\n\t\tthis.state = {\r\n\t\t\twidth: \"\",\r\n\t\t\theight: \"\",\r\n\t\t\tcolor: \"\"\r\n\t\t};\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\thandleChange (evt) {\r\n\t\tthis.setState({\r\n\t\t\t[evt.target.name]: evt.target.value\r\n\t\t});\r\n\t}\r\n\thandleSubmit (evt) {\r\n\t\tevt.preventDefault();\r\n\t\tconst newBox = { ...this.state, id: this.boxKey };\r\n\t\tthis.props.addBox(newBox);\r\n\t\tthis.setState({\r\n\t\t\tcolor: \"\",\r\n\t\t\twidth: \"\",\r\n\t\t\theight: \"\"\r\n\t\t});\r\n\t\tthis.boxKey++;\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"card-form\">\r\n\t\t\t\t<form className=\"signup\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"form-title\">Create Color Box!</div>\r\n\t\t\t\t\t<div className=\"form-body\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"color\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Box Color\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.color}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Width\"\r\n\t\t\t\t\t\t\t\tname=\"width\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.width}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Height\"\r\n\t\t\t\t\t\t\t\tname=\"height\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.height}\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"rule\" />\r\n\t\t\t\t\t<div className=\"form-footer\">\r\n\t\t\t\t\t\t<button type=\"submit\">Add!</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NewBoxForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Box extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleRemove = this.handleRemove.bind(this);\r\n\t}\r\n\thandleRemove (evt) {\r\n\t\tthis.props.remBox(this.props.id);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"boxlist-item\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"box\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: `${this.props.width}px`,\r\n\t\t\t\t\t\theight: `${this.props.height}px`,\r\n\t\t\t\t\t\tbackgroundColor: this.props.color\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"button\" onClick={this.handleRemove}>\r\n\t\t\t\t\tRemove Box!\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Box;\r\n","import React, { Component } from \"react\";\r\nimport NewBoxForm from \"./NewBoxForm\";\r\nimport Box from \"./Box\";\r\n\r\nclass BoxList extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tboxesList: []\r\n\t\t};\r\n\t\tthis.addBox = this.addBox.bind(this);\r\n\t\tthis.remBox = this.remBox.bind(this);\r\n\t}\r\n\tremBox (id) {\r\n\t\tthis.setState((currState) => ({\r\n\t\t\tboxesList: currState.boxesList.filter((item) => item.id !== id)\r\n\t\t}));\r\n\t}\r\n\taddBox (box) {\r\n\t\tthis.setState((currState) => ({\r\n\t\t\tboxesList: [ ...currState.boxesList, box ]\r\n\t\t}));\r\n\t}\r\n\tlistRender () {\r\n\t\treturn (\r\n\t\t\t<ul className=\"boxlist\">\r\n\t\t\t\t{this.state.boxesList.map((item) => (\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\tcolor={item.color}\r\n\t\t\t\t\t\twidth={item.width}\r\n\t\t\t\t\t\theight={item.height}\r\n\t\t\t\t\t\tremBox={this.remBox}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<NewBoxForm addBox={this.addBox} />\r\n\t\t\t\t{this.listRender()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BoxList;\r\n","import React from \"react\";\nimport BoxList from \"./BoxList\";\nimport \"./App.css\";\n\nfunction App () {\n\treturn <BoxList />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}